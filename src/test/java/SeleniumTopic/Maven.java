package SeleniumTopic;

public class Maven {
    /**
     Why we use the surefire plugin

     We use the Maven Surefire Plugin in automation testing to run test cases automatically as part of the Maven build process.
     It's a core part of integrating testing frameworks like TestNG or JUnit into Maven projects.
     Generates detailed test reports in target/surefire-reports.
     Supports test filtering, test groups, and parallel execution.

    <build>
     <plugins>
     <plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-surefire-plugin</artifactId>
     <version>3.2.5</version>
     <configuration>
     <includes>
     <include>**//**Test.java</include>
        </includes>
        <testFailureIgnore>false</testFailureIgnore>
         </configuration>
     </plugin>
     </plugins>
    </build>



     2. Why is the target/ Folder Deleted with mvn clean?

     The mvn clean command deletes the target/ directory because it's designed to:
     Remove all files generated by the previous Maven build (like compiled .class files, packaged .jar/.war, reports, etc.


     3.  Whatâ€™s inside target/?
     When you run Maven commands like mvn compile, mvn test, or mvn install, Maven stores build artifacts in the target/ folder:
     Compiled .class files
     Packaged .jar or .war files
     Test reports (surefire-reports, allure-results, etc.)
     Temporary files and logs


     4. What is command mvn clean test
     Deletes target/
     Rebuilds and runs tests cleanly

     5.  What Happens When You Run mvn compile?
     Reads pom.xml to get project configuration and dependencies.
     Downloads any needed dependencies from Maven Central (if not already downloaded).
     Compiles all .java files from src/main/java.
     Outputs the compiled .class files into the target/classes directory.

     6. how to the run  testng.xml file using the mvn clean test from the command line
       added in the pom. make sure that the surefire plugin is xml
      and go the project location run the cmd and type the mvn clean test

     <build>
     <plugins>
     <plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-surefire-plugin</artifactId>
     <version>3.2.5</version> <!-- Latest stable version -->
     <configuration>
     <suiteXmlFiles>
     <suiteXmlFile>testng.xml</suiteXmlFile>  <!-- Path to your testng.xml -->
     </suiteXmlFiles>
     </configuration>
     </plugin>
     </plugins>






     */

}
